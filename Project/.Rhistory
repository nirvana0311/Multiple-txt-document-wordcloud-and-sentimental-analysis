require(c(tm,Wordcloud,stringr))
require(c(tm))
require(tm)
require(stringr)
require(wordcloud)
file.choose()
file.choose()
folder="C:\\Users\\nirva\\IdeaProjects\\R\\Jalayer data mining part 5\\Project"
list.files(path = folder,pattern = "*.txt")
paste(folder,fileList,sep = "")
fileList=list.files(path = folder,pattern = "*.txt")
paste(folder,fileList,sep = "")
paste(folder,"\\",fileList,sep = "")
fileList=paste(folder,"\\",fileList,sep = "")
class(fileList)
dim(fileList)
fileList
fileList[1]
a=readline(fileList[1])
a=readline(fileList[1])
a
a=readLines(fileList[1])
a
paste(a,collapse = " ")
?paste
paste(a,collapse = " ",sep = " ")
paste(a,collapse = " ")
corpus=lapply(fileList,FUN = paste(a,collapse = " "))
corpus=lapply(fileList,FUN = paste,collapse = " "))
corpus=lapply(fileList,FUN = paste,collapse = " ")
corpus
fileList=paste(folder,"\\",fileList,sep = "")
corpus=lapply(fileList,FUN = paste,collapse = " ")
corpus
fileList=list.files(path = folder,pattern = "*.txt")
fileList=paste(folder,"\\",fileList,sep = "")
corpus=lapply(fileList,FUN = readLines)
corpus
lapply(corpus,FUN = paste,collapse = " ")
corpus
corpus=lapply(corpus,FUN = paste,collapse = " ")
corpus
folder="C:\\Users\\nirva\\IdeaProjects\\R\\Jalayer data mining part 5\\Project"
fileList=list.files(path = folder,pattern = "*.txt")
fileList=paste(folder,"\\",fileList,sep = "")
corpus=lapply(fileList,FUN = readLines)
corpus=lapply(corpus,FUN = paste,collapse = " ")
corpus
corpus=gsub(" ?(f|ht)tp(s?)://(.*)[.|/|&|=][a-zA-z0-9|-]*", "", corpus)
corpus=gsub(pattern = "\\W",replacement = " ",corpus)
corpus=gsub(pattern = "\\d",replacement = " ",corpus)
corpus=tolower(corpus)
corpus=removeWords(corpus,stopwords('en'))
corpus=gsub("\\b[A-z]\\b{1}",replacement = "",corpus)
corpus=stripWhitespace(corpus)
corpus2=Corpus(VectorSource(corpus))
corpus2
x11()
corpus
tdm=TermDocumentMatrix(corpus2)
tdm
2030/(1216+2030)
929/(929+535)
as.matrix(tdm)
tdmAsMatrix=as.matrix(tdm)
colnames(tdmAsMatrix)
fileList
colnames(tdmAsMatrix)=c("Che","euro","mart")
head(tdmAsMatrix)
comparison.cloud(tdmAsMatrix)
tdmAsMatrix
pos.words=scan("positive-words.txt",what = 'character',comment.char = ';')
pos.words=scan("negative-words.txt",what = 'character',comment.char = ';')
corpus
str_split(corpus,pattern = "\\s+")
bagOfWords=str_split(corpus,pattern = "\\s+")
head(bagOfWords)
match(bagOfWords,pos.words)
match(bagOfWords[[1]],pos.words)
length(bagOfWords)
length(bagOfWords[1])
length(bagOfWords[[1]])
length(bagOfWords[[2]])
length(bagOfWords[[3]])
length(bagOfWords[[1:3]])
length(bagOfWords[1:3])
length(bagOfWords[[1:3]])
length(bagOfWords[[2]])
length(bagOfWords[[1,3]])
length(bagOfWords[[1][2]])
length(bagOfWords[[1],[2]])
length(bagOfWords[[(1:3)]])
bagOfWords[1]
bagOfWords[[1]]
length(bagOfWords[[1]])
length(bagOfWords[1])
length(bagOfWords[[1]][1])
bagOfWords[[1]][1]
bagOfWords[[1]][2]
d=c(1,2,3)
length(bagOfWords[[1]])
length(bagOfWords[[d]])
length(bagOfWords[[2]])
for(1:3){print("hello")}
for(_ in 1:3){print("hello")}
for(x in 1:3){print("hello")}
for(x in 1:3){print("hello"+x)}
for(x in 1:3){print("hello"+""+x)}
for(x in 1:3){print("x)}
for(x in 1:3){print(x)}
for(x in 1:3){print(x)}
for(x in 1:3){
length(bagOfWords[[]])}
for(x in 1:3){
length(bagOfWords[[x]])}
for(x in 1:3){
print(length(bagOfWords[[x]]))}
for(x in 1:3){
sum(length(bagOfWords[[x]]))}
for(x in 1:3){print(sum(length(bagOfWords[[x]])))}
lapply(bagOfWords,FUN = function(x){sum(!is.na(match(x,pos.words)))})
pos.words=scan("positive-words.txt",what = 'character',comment.char = ';')
neg.words=scan("negative-words.txt",what = 'character',comment.char = ';')
lapply(bagOfWords,FUN = function(x){sum(!is.na(match(x,pos.words)))})
lapply(bagOfWords,FUN = function(x){sum(!is.na(match(x,neg.words)))})
lapply(bagOfWords,FUN = function(x){sum(!is.na(match(x,pos.words)))-sum(!is.na(match(x,neg.words)))})
words
getwd()
setwd("C:\\Users\\nirva\\IdeaProjects\\R\\Whatsapp chat analysis")
neg.words=scan('negative-words.txt',what = 'character',comment.char = ";")
pos.words=scan('positive-words.txt',what = 'character',comment.char = ";")
match(words,pos.words)
sum(!is.na(match(words,pos.words)))
sum(!is.na(match(words,pos.words)))-sum(!is.na(match(words,neg.words)))
lib=c('tm','plyr','class','stringr','wordcloud')
lapply(lib,require,character.only=T)
setwd("C:\\Users\\nirva\\IdeaProjects\\R\\Whatsapp chat analysis")
text=readLines("WhatsApp Chat with Ye kya chutyapa hai!!")
text1=gsub(" ?(f|ht)tp(s?)://(.*)[.|/|&|=][a-zA-z0-9|-]*", "", text)
text2=gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}, .*[:]",replacement = " ",text1)
text3=gsub(pattern = "\\W",replacement = " ",text2)
text4= iconv(text3,"latin1","ASCII",sub = "")
text5=tolower(text4)
text6=gsub("\\d",replacement = "",text5)
text7=removeWords(text6,stopwords('en'))
text7=removeWords(text7,c('media','omitted','hai'))
text8=gsub("\\b[A-z]\\b{1}",replacement = "",text7)
text9=stripWhitespace(text8)
text9=paste(text9,collapse = " ",sep = " ")
words=str_split(text9,pattern = "\\s+")
words=unlist(words)
lib=c('tm','plyr','class','stringr','wordcloud')
lapply(lib,require,character.only=T)
setwd("C:\\Users\\nirva\\IdeaProjects\\R\\Whatsapp chat analysis")
text=readLines("WhatsApp Chat with Ye kya chutyapa hai!!")
text1=gsub(" ?(f|ht)tp(s?)://(.*)[.|/|&|=][a-zA-z0-9|-]*", "", text)
text=readLines("WhatsApp Chat with Ye kya chutyapa hai!!")
text=readLines("WhatsApp Chat with Ye kya chutyapa hai!!.txt")
text1=gsub(" ?(f|ht)tp(s?)://(.*)[.|/|&|=][a-zA-z0-9|-]*", "", text)
text2=gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}, .*[:]",replacement = " ",text1)
text3=gsub(pattern = "\\W",replacement = " ",text2)
text4= iconv(text3,"latin1","ASCII",sub = "")
text5=tolower(text4)
text6=gsub("\\d",replacement = "",text5)
text7=removeWords(text6,stopwords('en'))
text7=removeWords(text7,c('media','omitted','hai'))
text8=gsub("\\b[A-z]\\b{1}",replacement = "",text7)
text9=stripWhitespace(text8)
text9=paste(text9,collapse = " ",sep = " ")
words=str_split(text9,pattern = "\\s+")
words=unlist(words)
pos.words=scan('positive-words.txt',what = 'character',comment.char = ";")
neg.words=scan('negative-words.txt',what = 'character',comment.char = ";")
sum(!is.na(match(words,pos.words)))-sum(!is.na(match(words,neg.words)))
print(sentimental_score)
sentimental_score=sum(!is.na(match(words,pos.words)))-sum(!is.na(match(words,neg.words)))
print(sentimental_score)
source('C:/Users/nirva/IdeaProjects/R/Whatsapp chat analysis/WhatsappChat analysis.R')
sum(!is.na(match(words,pos.words)))-sum(!is.na(match(words,neg.words)))
source('C:/Users/nirva/IdeaProjects/R/Whatsapp chat analysis/WhatsappChat analysis.R')
match('love',pos.words)
match('love',neg.words)
match('hate',neg.words)
match('doom',neg.words)
match('avoid',neg.words)
match('avoid',pos.words)
match('pathetic',neg.words)
match('cringe',neg.words)
match('waste',neg.words)
match('horrible',neg.words)
match('horribble',neg.words)
match('time',neg.words)
match('love',neg.words|pos.words)
match('love',neg.words,pos.words)
match('love',c(neg.words,pos.words))
match('fake',c(neg.words,pos.words))
